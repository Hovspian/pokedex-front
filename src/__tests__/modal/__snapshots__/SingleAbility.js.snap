// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SingleAbility Component should match SingleAbility component snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SingleAbility
    description="Halves damage from fire and ice moves."
    index={0}
    name="Thick Fat"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span
          id="ability-0"
          onMouseOut={[Function]}
          onMouseOver={[Function]}
>
          Thick Fat
</span>,
        <Popover
          delay={
                    Object {
                              "hide": 0,
                              "show": 0,
                            }
          }
          hideArrow={true}
          isOpen={false}
          placement="top"
          placementPrefix="bs-popover"
          target="ability-0"
          toggle={[Function]}
>
          <PopoverBody
                    tag="div"
          >
                    <h5>
                              Halves damage from fire and ice moves.
                    </h5>
          </PopoverBody>
</Popover>,
      ],
      "className": "ability",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Thick Fat",
          "id": "ability-0",
          "onMouseOut": [Function],
          "onMouseOver": [Function],
        },
        "ref": null,
        "rendered": "Thick Fat",
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <PopoverBody
            tag="div"
>
            <h5>
                        Halves damage from fire and ice moves.
            </h5>
</PopoverBody>,
          "delay": Object {
            "hide": 0,
            "show": 0,
          },
          "hideArrow": true,
          "isOpen": false,
          "placement": "top",
          "placementPrefix": "bs-popover",
          "target": "ability-0",
          "toggle": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <h5>
              Halves damage from fire and ice moves.
</h5>,
            "tag": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Halves damage from fire and ice moves.",
            },
            "ref": null,
            "rendered": "Halves damage from fire and ice moves.",
            "type": "h5",
          },
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "span",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            id="ability-0"
            onMouseOut={[Function]}
            onMouseOver={[Function]}
>
            Thick Fat
</span>,
          <Popover
            delay={
                        Object {
                                    "hide": 0,
                                    "show": 0,
                                  }
            }
            hideArrow={true}
            isOpen={false}
            placement="top"
            placementPrefix="bs-popover"
            target="ability-0"
            toggle={[Function]}
>
            <PopoverBody
                        tag="div"
            >
                        <h5>
                                    Halves damage from fire and ice moves.
                        </h5>
            </PopoverBody>
</Popover>,
        ],
        "className": "ability",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Thick Fat",
            "id": "ability-0",
            "onMouseOut": [Function],
            "onMouseOver": [Function],
          },
          "ref": null,
          "rendered": "Thick Fat",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <PopoverBody
              tag="div"
>
              <h5>
                            Halves damage from fire and ice moves.
              </h5>
</PopoverBody>,
            "delay": Object {
              "hide": 0,
              "show": 0,
            },
            "hideArrow": true,
            "isOpen": false,
            "placement": "top",
            "placementPrefix": "bs-popover",
            "target": "ability-0",
            "toggle": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <h5>
                Halves damage from fire and ice moves.
</h5>,
              "tag": "div",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Halves damage from fire and ice moves.",
              },
              "ref": null,
              "rendered": "Halves damage from fire and ice moves.",
              "type": "h5",
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "span",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
